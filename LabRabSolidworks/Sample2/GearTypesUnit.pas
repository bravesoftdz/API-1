unit GearTypesUnit;

interface

uses Classes;

type
  // Тип ремённой передачи
  TBeltType =
  (
    btFlat            {Плоский},
    btVee             {Клиновой},
    btMultiGroove     {Поликлиновой},
    btFilm            {Плёночнный},
    btNarrowVee       {Узкоклиновой},
    btTiming          {Зубчатый}
  );

  // Тип цепной передачи
  TChainType =
  (
    ctTooth           {Зубчатая},
    ctRoller          {Роликовая}
  );

  // Тип зубчатой передачи
  TGearType =
  (
    gtSpur            {Прямозубая},
    gtHelical         {Косозубая},
    gtDoubleHelical   {Шевронная},
    gtWorm            {Червячная},
    gtInternal        {Внутреннего зацепления},
    gtPlanet          {Планетарная}
  );

type
  // Тип натяжения ремня
  TTensionType =
  (
    ttAutomatic,      {Автоматическое}
    ttTiming          {Периодическое}
  );



  IslRec=record  {Общая для всех передач}
  i: byte;// Идентификатор
  Itype:byte;
  P1,n1,
  d1,d2,Cp,Fdelta,alfa_min,nyu_max,V_max,F_pr,a,b:real;
  Tip_pl: word;
  Tip_nat: boolean;
end;

  DatRec=record  {Общая для всех передач}
  i: byte;// Идентификатор
  P1 {Мощность на ведущем валу},n1 {Частота вращения ведущего шкива},
  up,d1,Cp {Коэффциент режима работы},Fdelta,alfa_min,
  nyu_max,V_max,F_pr,a {Межосевое расстояние},Sdelta:real;

  dud,m,Cpo:real; //Зуб
  Q,Tip_pl {Тип плоского ремня},Tip_kl{Зуб},Lh_0,Change: word;
  z1:byte;
  Tip_nat{Тип натяжения},Tip_p: boolean;

  Mark,bet: byte;
  Ka: word;
  x, y, z, ii, j, kk: single;
  Kd,Ke: real;

end;

type

 //Плоскоременная
 TransRes=record
  d1,d2,a,l,Fdelta,bs,b,F0,Fb,Lh,Dmin:real;
 end;

 //Плоскопленочная
 FilmRes=record
  d1,d2,a,l,bs,b,F0,Fb,Lh{,Dmin}:real;
 end;

 //Клиновая
 ClinRes=record
  d1,d2,d_e1,d_e2,d_f1,d_f2,a,l,bs,z,F0,Fb,Lh{,Dmin}:real;
  tip:word;
 end;

  // Входные параметры для узкоклиновой ремённой передачи
  TNarrowVeeInput = record
    P1,             {Мощность на ведущем валу, кВт}
    n1,             {Частота вращения ведущего шкива, об/мин}
    up,             {Передаточное число}
    d1,             {Диаметр меньшего шкива, мм; 0 - Любой}
    a: extended;    {Межосевое расстояние, мм; 0 - Любое}
    Q: integer;     {Угол наклона передачи} {Судя по всему в расчёте не используется}
    Cp: extended;   {Коэффициент режима работы}
                    {1 - спокойная нагрузка, 1.15 - умеренные колебания}
                    {1.25 - значительные колебания, 1.55 - ударная нагрузка}
    Tension: TTensionType;
                    {Тип натяжения ремня; автоматическое-периодическое}
    SectionIndex: integer;
                    {Номер типоразмера ремня; 0 - Любой, 1 - УО, 2 - УА, 3 - УБ, 4 - УВ}
  end;

  // Выходные параметры для одного экземпляра узкоклиновой ремённой передачи
  TNarrowVeeOutput = record
    d1,             {Диаметр меньшего (ведущего) шкива, мм}
    l,              {Неизвестный выходной параметр, мм}
    d2,             {Диаметр большего (ведомого) шкива, мм}
    a: extended;    {Межосевое расстояние, мм}
    SectionIndex: integer;
                    {Номер типоразмера ремня, 1 - УО, 2 - УА, 3 - УБ, 4 - УВ}
    z: integer;     {Число ремней}
    d_e1,           {Наружный диаметр ведущего шкива, мм}
    d_e2,           {Наружный диаметр ведомого шкива, мм}
    d_f1,           {Диаметр по дну впадин ведущего шкива, мм}
    d_f2: extended; {Диаметр по дну впадин ведомого шкива, мм}
    Bs: extended;   {Ширина шкива, мм}
    F0,             {Усилие предварительного натяжения, Н}
    Fb,             {Давление на валы от натяжения ремня, Н}
    Lh,             {Долговечность ремня, часы}
    Vol,            {Объём передачи}
    alfa,           {Угол обхвата ремнем шкива, градусы}
    nyu,            {Число проходов ремня, 1/с}
    PMax,           {Максимально допустимая мощность, кВт}
    V: extended;    {Линейная скорость ремня, мм/с}
  end;

  // Коллекция выходных параметров узкоклиновой ремённой передачи
  TNarrowVeeOutputs = array of TNarrowVeeOutput;

  // Входные параметры для поликлиновой ремённой передачи
  TMultiGrooveInput = record
    P1,             {Мощность на ведущем валу, кВт}
    n1,             {Частота вращения ведущего шкива, об/мин}
    up,             {Передаточное число}
    d1,             {Диаметр меньшего шкива, мм; 0 - Любой}
    a: extended;    {Межосевое расстояние, мм; 0 - Любое}
    Q: integer;     {Угол наклона передачи} {Судя по всему в расчёте не используется}
    Cp: extended;   {Коэффициент режима работы}
                    {1 - спокойная нагрузка, 1.15 - умеренные колебания}
                    {1.25 - значительные колебания, 1.55 - ударная нагрузка}
    Tension: TTensionType;
                    {Тип натяжения ремня; автоматическое-периодическое}
    SectionIndex: integer;
                    {Номер типоразмера ремня; 0 - Любой, 1 - К, 2 - Л, 3 - М}
  end;

  // Выходные параметры для одного экземпляра поликлиновой ремённой передачи
  TMultiGrooveOutput = record
    d1,             {Диаметр меньшего (ведущего) шкива, мм}
    l,              {Неизвестный выходной параметр, мм}
    d2,             {Диаметр большего (ведомого) шкива, мм}
    a: extended;    {Межосевое расстояние, мм}
    SectionIndex: integer;
                    {Номер типоразмера ремня, 1 - К, 2 - Л, 3 - М}
    z: integer;     {Число ремней}
    d_e1,           {Наружный диаметр ведущего шкива, мм}
    d_e2,           {Наружный диаметр ведомого шкива, мм}
    d_f1,           {Диаметр по дну впадин ведущего шкива, мм}
    d_f2: extended; {Диаметр по дну впадин ведомого шкива, мм}
    Bs: extended;   {Ширина шкива, мм}
    F0,             {Усилие предварительного натяжения, Н}
    Fb,             {Давление на валы от натяжения ремня, Н}
    Lh,             {Долговечность ремня, часы}
    Vol,            {Объём передачи}
    alfa,           {Угол обхвата ремнем шкива, градусы}
    nyu,            {Число проходов ремня, 1/с}
    PMax,           {Максимально допустимая мощность, кВт}
    V: extended;    {Линейная скорость ремня, мм/с}
  end;

  // Коллекция выходных параметров поликлиновой ремённой передачи
  TMultiGrooveOutputs = array of TMultiGrooveOutput;

 //Зубчатая цепь
 Cogres=record
  d1,d2,da1,da2,z1,z2,a,l,bs,b,Fb,Lh,Uf{,Dmin}:real;
 end;

 //Роликовая цепь
 Rolres=record
    z1,z2,tip: byte;
    Step,Vol,Weigth,L,Fb,B,Lhe,a,d1,d2,da1,da2: real;
    Lp:integer;
 end;

const
  //Максимально допустимое значение мощности на ведущем валу, кВт
  P1Max: extended = 200;
  //Минимально допустимое значение мощности на ведущем валу, кВт
  P1Min: extended = 0.1;
  //Максимально допустимое значение передаточного числа
  UpMax: extended = 10;
  //Минимально допустимое значение передаточного числа
  UpMin: extended = 0.1;
  //Максимально допустимое значение частоты вращения ведущего шкива, об/мин
  N1Max: extended = 10000;
  //Минимально допустимое значение частоты вращения ведущего шкива, об/мин
  N1Min: extended = 0.1;


implementation

end.
